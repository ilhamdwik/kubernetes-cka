# Resource Memory CPU

```
apiVersion: v1
kind: Pod
metadata:
  name: simple-web
  labels:
    name: simple-web
spec:
  containers:
    - image: nginx
      name: nginx
      ports:
        - containerPort: 8080
      resources:
        requests:
          memory: "1Gi"
          cpu: 1
        limits:
          memory: "2Gi"
          cpu: 2
```


# Resources CPU
1 AWS vCPU
1 GCp Core
1 Azure Core
1 Hyperthread

# Resources Memory
1 G (Gigabyte) = 1,000,000,000 bytes
1 M (Megabyte) = 1,000,000 bytes
1 K (Kilobyte) = 1,000 bytes

1 Gi (Gibibyte) = 1,073,741,824 bytes
1 Mi (Mebibyte) = 1,048,576 bytes
1 Ki (Kibibyte) = 1,024 bytes




## Note on default resource requirements and limits
In the previous lecture, I said - "When a pod is created the containers are assigned a default CPU request of .5 and memory of 256Mi". For the POD to pick up those defaults you must have first set those as default values for request and limit by creating a LimitRange in that namespace.

```
apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
  - default:
      memory: 512Mi
    defaultRequest:
      memory: 256Mi
    type: Container
```

#### https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/


```
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-limit-range
spec:
  limits:
  - default:
      cpu: 1
    defaultRequest:
      cpu: 0.5
    type: Container
```

#### https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/



### References:

#### https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource
